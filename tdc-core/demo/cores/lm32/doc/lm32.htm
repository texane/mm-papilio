<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>LatticeMico32 processor</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="lever40_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='lever40.css'>");}
//-->
</script>
<style>
<!--
body { border-left-style:None; border-right-style:None; border-top-style:None; border-bottom-style:None; }
-->
</style><style type="text/css">
<!--
img_whs1 { border:none; width:29px; height:31px; float:none; border-style:none; }
p.whs2 { font-style:italic; }
table.whs3 { x-cell-content-align:top; height:84px; left:0px; top:114px; width:738px; margin-left:15px; border-spacing:0px; }
col.whs4 { width:93px; }
col.whs5 { width:598px; }
tr.whs6 { x-cell-content-align:top; height:22px; }
td.whs7 { width:93px; padding-right:10px; padding-left:10px; border-left-style:Solid; border-left-color:#c0c0c0; border-top-style:Solid; border-top-color:#c0c0c0; border-right-color:#c0c0c0; border-right-style:Solid; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-right-width:1px; border-left-width:1px; border-top-width:1px; border-bottom-width:1px; background-color:#dee8f4; }
td.whs8 { width:598px; padding-right:10px; padding-left:10px; border-top-style:Solid; border-top-color:#c0c0c0; border-right-color:#c0c0c0; border-right-style:Solid; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-top-width:1px; border-bottom-width:1px; border-right-width:1px; background-color:#dee8f4; }
td.whs9 { width:93px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-left-width:1px; border-left-style:Solid; border-right-color:#c0c0c0; border-right-style:Solid; border-right-width:1px; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-bottom-width:1px; }
td.whs10 { width:598px; padding-right:10px; padding-left:10px; border-right-color:#c0c0c0; border-right-style:Solid; border-right-width:1px; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-bottom-width:1px; }
p.whs11 { margin-left:4px; }
table.whs12 { x-cell-content-align:top; margin-left:15px; border-spacing:0px; }
col.whs13 { width:167px; }
col.whs14 { width:524px; }
tr.whs15 { x-cell-content-align:top; }
td.whs16 { width:167px; padding-right:10px; padding-left:10px; background-color:#dee8f4; border-left-color:#c0c0c0; border-top-color:#c0c0c0; border-top-style:Solid; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; border-left-width:1px; border-left-style:solid; border-top-width:1px; }
td.whs17 { width:524px; padding-right:10px; padding-left:10px; background-color:#dee8f4; border-top-style:Solid; border-top-color:#c0c0c0; border-right-style:Solid; border-right-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-top-width:1px; border-right-width:1px; }
td.whs18 { width:167px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; border-left-width:1px; border-left-style:solid; }
td.whs19 { width:524px; border-right-style:Solid; border-right-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-width:1px; }
td.whs20 { width:691px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-right-style:Solid; border-right-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-left-width:1px; border-left-style:solid; border-right-width:1px; }
td.whs21 { width:524px; padding-right:10px; padding-left:10px; border-right-style:Solid; border-right-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-width:1px; }
ul.whs22 { list-style:disc; }
td.whs23 { width:167px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; border-left-width:1px; border-left-style:solid; border-bottom-width:1px; }
td.whs24 { width:524px; padding-right:10px; padding-left:10px; border-right-style:Solid; border-right-color:#c0c0c0; border-bottom-style:Solid; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-right-width:1px; }
td.whs25 { width:167px; padding-right:10px; padding-left:10px; background-color:#dee8f4; border-left-color:#c0c0c0; border-top-style:Solid; border-top-color:#c0c0c0; border-right-color:#c0c0c0; border-right-style:Solid; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-width:1px; border-left-width:1px; border-left-style:Solid; border-top-width:1px; }
td.whs26 { width:524px; padding-right:10px; padding-left:10px; background-color:#dee8f4; border-top-style:Solid; border-top-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-top-width:1px; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; }
td.whs27 { width:691px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-left-width:1px; border-left-style:Solid; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; }
td.whs28 { width:167px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-right-color:#c0c0c0; border-right-style:Solid; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-width:1px; border-left-width:1px; border-left-style:Solid; }
td.whs29 { width:524px; padding-right:10px; padding-left:10px; border-bottom-color:#c0c0c0; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; }
td.whs30 { width:167px; padding-right:10px; padding-left:10px; border-left-color:#c0c0c0; border-right-color:#c0c0c0; border-right-style:Solid; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-right-width:1px; border-left-width:1px; border-left-style:Solid; border-bottom-width:1px; }
td.whs31 { width:524px; padding-right:10px; padding-left:10px; border-bottom-color:#c0c0c0; border-bottom-style:Solid; border-bottom-width:1px; border-right-color:#c0c0c0; border-right-width:1px; border-right-style:Solid; }
img_whs32 { border:none; width:14px; height:16px; float:none; border-style:none; }
-->
</style><script type="text/javascript" language="JavaScript">
<!--
function ehlp_showtip(current,e,text)
{
  if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  {
    document.tooltip.document.write("<layer bgColor='yellow' style='border:1px solid black;font-size:12px;'>"+ text + "</layer>");
    document.tooltip.document.close();
    document.tooltip.left=e.pageX+5;
    document.tooltip.top=e.pageY+5;
    document.tooltip.visibility="show";
  }
}
function ehlp_hidetip()
{
  document.tooltip.visibility="hidden";
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style><script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("LM32");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("msb_peripherals.htm");

		autoSync(0);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<h1>LatticeMico32 Processor &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a title="View Reference Manual" href="lm32_archman.pdf" target="_blank" onmouseover="if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape')) ehlp_showtip(this,event,'View Reference Manual');" onmouseout="if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape')) ehlp_hidetip();"><img src="ds_icon_ast.jpg" x-maintain-ratio="TRUE" width="29px" height="31px" border="0" class="img_whs1"></a></h1>

<p>The LatticeMico32 processor is a high-performance 32-bit microprocessor 
 optimized for Lattice Semiconductor field-programmable gate arrays. </p>

<p class="whs2"><span style="font-style: italic;"><I>*If the 
 processor manual fails to open, see the note at the bottom of this page.</I></span></p>

<h2>Revision History</h2>

<table x-use-null-cells cellspacing="0" width="738" height="84" class="whs3">
<script language='JavaScript'><!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4)) document.write("</table><table x-use-null-cells cellspacing='0' width='738' height='84' border='1' bordercolor='silver' bordercolorlight='silver' bordercolordark='silver'>");
//--></script>
<col class="whs4">
<col class="whs5">

<tr valign="top" class="whs6">
<td bgcolor="#DEE8F4" width="93px" class="whs7">
<p class=Table
	style="font-weight: bold;">Version</td>
<td bgcolor="#DEE8F4" width="598px" class="whs8">
<p class=Table
	style="font-weight: bold;">Description</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;">3.5</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class=whs10
	style="margin-left: 0px;">Support added to allow Inline Memories to 
 be generated as non-power-of-two, as long as they are a multiple of 1024 
 bytes</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;">3.4</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class=whs10
	style="margin-left: 0px;">Updated to support ispLEVER 7.2 SP1.</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;">3.3</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class=whs10
	style="margin-left: 0px;">Updated to support ispLEVER 7.2.</p>
<p class=whs10
	style="margin-left: 0px;">Added Inline Memory to support on-chip memory 
 connected through a local bus.</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;">3.2</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class=whs10
	style="margin-left: 0px;">Updated to support ispLEVER 7.1 SP1</p>
<p class=whs10
	style="margin-left: 0px;">Added Memory Type to instruction cache and 
 data cache.</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;">3.1</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class="whs11">Updated to support ispLEVER 7.1.</p>
<p class="whs11">Added static predictor to improve the behavior 
 of branches.</p>
<p class="whs11">Added support for optionally mapping the register 
 file to EBRs (on-chip memory).</p>
<p class="whs11">Added support for selecting between distributed 
 RAM and EBRs (pseudo-dual port or true-dual port) for instruction and 
 data caches.</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class=Table
	style="font-weight: normal;"><span style="font-weight: normal;">3.0 
 (7.0 SP2)</span></td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class="whs11">Updated to support ispLEVER 7.0 SP2.</p>
<p class="whs11">Fixed incorrect handling of data cache miss 
 in the presence of an instruction cache miss.</td></tr>

<tr valign="top" class="whs6">
<td colspan="1" rowspan="1" width="93px" class="whs9">
<p class="whs11">1.0</td>
<td colspan="1" rowspan="1" width="598px" class="whs10">
<p class="whs11">Initial version.</td></tr>
<script language='JavaScript'><!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4)) document.write("</table></table><table>");
//--></script>
</table>

&nbsp; 

<h2>Dialog Box Parameters &#8211; 
 General Tab</h2>

<table x-use-null-cells cellspacing="0" class="whs12">
<col class="whs13">
<col class="whs14">

<tr valign="top" class="whs15">
<td bgcolor="#DEE8F4" width="167px" class="whs16">
<p class=Table
	style="font-weight: bold;">Parameter</td>
<td bgcolor="#DEE8F4" width="524px" class="whs17">
<p class=Table
	style="font-weight: bold;">Description</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table
	style="font-weight: normal;">Instance Name</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 14px;">Specifies the name of the LatticeMico32 
 processor. Alphanumeric values and underscores are supported. The default 
 is LM32.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table
	style="font-weight: bold;">Settings</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Use EBRs for Register File</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Uses embedded block RAMS for the register file.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Divide</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the divide and modulus instructions (<span style="font-family: Verdana, sans-serif;">divu, 
 modu</span>).</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Sign Extend</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the sign-extension instructions (<span style="font-family: Verdana, sans-serif;">sextb, 
 sexth</span><span style="font-family: Arial, sans-serif;">)</span>.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Location of Exception Handlers</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Specifies the default value for the vector table. This can 
 be changed by updating the EBA control register or status register.</p>
<p class=Table>This address must be aligned to a 256-byte boundary, since 
 the hardware ignores the least-significant byte. Unpredictable behavior 
 occurs when the exception base address and the exception vectors are not 
 aligned on a 256-byte boundary.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table
	style="font-weight: bold;">Multiplier Settings</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Multiplier</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the multiply instructions (<span style="font-family: Verdana, sans-serif;">mul, 
 muli)</span>.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Pipelined Multiplier (DSP Block if available)</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the multiplier using the DSP block, if available.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Multicycle (LUT-based, 32 cycles) Multiplier</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the multiplier using LUTs.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table
	style="font-weight: bold;">Instruction Cache</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Instruction Cache Enabled</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 14px;">Determines whether an instruction cache 
 is implemented.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Number of Sets</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 14px;">Specifies the number of sets in the instruction 
 cache. Supported values are 128, 256, 512, 1024.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Set Associativity</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 14px;">Specifies the associativity of the instruction 
 cache. Supported values are 1, 2.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Bytes/Cache Line</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 15px;">Specifies the number of bytes per instruction 
 cache line. Supported values are 4, 8, 16.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Memory Type</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p class=Table
	style="margin-left: 15px;">Determines the FPGA resource to be used 
 to implement the instruction cache. The decision can be left to the synthesis 
 tool (Auto), or you can select from the following options:</p>
<ul type="disc" class="whs22">
	
	<li class=kadov-p-CBullet><p class=Bullet>Auto &#8211; 
 Leaves the implementation of the instruction cache to the synthesis tool.</p></li>
	
	<li class=kadov-p-CBullet><p class=Bullet>Distributed RAM &#8211; 
 Implements the instruction cache as distributed RAM.</p></li>
	
	<li class=kadov-p-CBullet><p class=Bullet>Dual-Port EBR &#8211; 
 Implements the instruction cache as dual-port EBR (two read/write ports).</p></li>
	
	<li class=kadov-p-CBullet><p class=Bullet>Pseudo Dual-Port EBR &#8211; Implements 
 the instruction cache as pseudo-dual-port EBR (one read port and one write 
 port). </p></li>
</ul></td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table
	style="font-weight: bold;">Debug Setting</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Debug Interface</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Includes the debugger stub in the CPU, which is required 
 for debugging.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table># of H/W Watchpoint Registers</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table
	style="font-weight: normal;">Specifies the number of hardware watchpoint 
 registers to be used in the debugging process.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Debugging Code in Flash or ROM</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table
	style="font-weight: normal;">Enables you to set hardware breakpoints 
 in read-only memory.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table># of H/W Breakpoint Registers</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Specifies the number of hardware breakpoint registers to 
 be used in the debugging process.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable PC Trace</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables the Program Counter Trace feature, which enables 
 you to run the program trace during debug to find items in your C or C++ 
 Code during debug, such as breakpoints and exceptions. Refer to <span 
 style="font-weight: bold;"><B>Help &gt; Help Contents &gt; C/C++ SPE</B></span> 
 and <span style="font-weight: bold;"><B>Debug &gt; Concepts &gt; Program 
 Counter Trace</B></span> for more information on Program Counter Trace.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Trace Depth</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Enables you to specify the depth of the Program Counter 
 Trace buffer. Refer to <span style="font-weight: bold;"><B>Help &gt; Help 
 Contents &gt; C/C++ SPE</B></span> and <span style="font-weight: bold;"><B>Debug 
 &gt; Concepts &gt; Program Counter Trace</B></span> for more information on 
 Program Counter Trace.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table
	style="font-weight: bold;">Shifter Settings</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Shifter</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p>Enables the multi-bit shift instructions (sr, sri, sru, srui, sl, sli). 
 </td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Piplined Barrel Shifter</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p>Enables the barrel shifter to be pipelined. The barrel shifter is implemented 
 to perform a shift operation in three cycles.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Enable Multicycle Barrel Shifter (up to 32 cycles)</td>
<td colspan="1" rowspan="1" width="524px" class="whs19">
<p>Enables multi-cycle shift operation for the barrel shifter. The barrel 
 shifter is implemented to shift one bit per cycle and take thirty-two 
 cycles to complete.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs20">
<p class=Table><span style="font-weight: bold;"><B>Data Cache</B></span></td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Data Cache Enabled</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Determines whether a data cache is implemented.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Number of Sets</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Specifies the number of sets in the data cache. Supported 
 values are 128, 256, 512, 1024.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Set Associativity</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Specifies the associativity of the data cache. Supported 
 values are 1, 2.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs18">
<p class=Table>Bytes/Cache Line</td>
<td colspan="1" rowspan="1" width="524px" class="whs21">
<p class=Table>Specifies the number of bytes per data cache line. Supported 
 values are 4, 8, 16.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs23">
<p class=Table>Memory Type</td>
<td colspan="1" rowspan="1" width="524px" class="whs24">
<p class=Table>Determines the FPGA resource to be used to implement the 
 data cache. The decision can be left to the synthesis tool (Auto), or 
 you can select from the following options:</p>
<ul>
	
	<li class=kadov-p-CBullet><p class=Bullet>Auto &#8211; 
 Leaves the implementation of the data cache to the synthesis tool.</p></li>
	
	<li class=kadov-p-CBullet><p class=Bullet>Distributed RAM &#8211; 
 Implements the data cache as distributed RAM.</p></li>
	
	<li class=kadov-p-CBullet><p class=Bullet>Dual-Port EBR &#8211; 
 Implements the data cache as dual-port EBR (two read/write ports).</p></li>
</ul></td></tr>
</table>

<p>&nbsp;</p>

<h2>Dialog Box Parameters &#8211; 
 Inline Memory Tab</h2>

<table x-use-null-cells cellspacing="0" class="whs12">
<col class="whs13">
<col class="whs14">

<tr valign="top" class="whs15">
<td bgcolor="#DEE8F4" width="167px" class="whs25">
<p class=Table
	style="font-weight: bold;">Parameter</td>
<td bgcolor="#DEE8F4" width="524px" class="whs26">
<p class=Table
	style="font-weight: bold;">Description</td></tr>

<tr valign="top" class="whs15">
<td rowspan="1" colspan="2" width="691px" class="whs27">
<p class=Table
	style="font-weight: bold;">Instruction Inline Memory</td>
</tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Enable</td>
<td width="524px" class="whs29">
<p class=Table>Enables the instruction inline memory</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Instance Name</td>
<td width="524px" class="whs29">
<p class=Table>Specifics the name of the instruction inline memory. Alphanumeric 
 values and underscores are supported. The default is Instruction_IM.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Base Address</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the base address for the instruction inline memory. 
 The default is 0x10000000.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Size of Memory in Bytes</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the size of the instruction inline memory.</td></tr>

<tr valign="top" class="whs15">
<td rowspan="1" colspan="2" width="691px" class="whs27">
<p class=Table><span style="font-weight: bold;"><B>Memory File</B></span></td>
</tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Initialization File Name</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the name of the memory initialization file for 
 instruction inline memory.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>File Format</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the format of the memory initialization file: 
 hex or binary.</td></tr>

<tr valign="top" class="whs15">
<td rowspan="1" colspan="2" width="691px" class="whs27">
<p class=Table
	style="font-weight: bold;">Data Inline Memory</td>
</tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Enabled</td>
<td width="524px" class="whs29">
<p class=Table>Enables the data inline memory.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Instance Name</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the name of the data inline memory. Alphanumeric 
 values and underscores are supported. The default is Data_IM.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Base Address</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the base address for the data inline memory. The 
 default is 0x20000000.</td></tr>

<tr valign="top" class="whs15">
<td width="167px" class="whs28">
<p class=Table>Size of Memory in Bytes</td>
<td width="524px" class="whs29">
<p class=Table>Specifies the size of the data inline memory.</td></tr>

<tr valign="top" class="whs15">
<td colspan="2" rowspan="1" width="691px" class="whs27">
<p class=Table
	style="font-weight: bold;">Memory File</td>
</tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs28">
<p class=Table>Initialization File Name</td>
<td colspan="1" rowspan="1" width="524px" class="whs29">
<p class=Table>Specifies the name of the memory initialization file for 
 data inline memory.</td></tr>

<tr valign="top" class="whs15">
<td colspan="1" rowspan="1" width="167px" class="whs30">
<p class=Table>File Format</td>
<td colspan="1" rowspan="1" width="524px" class="whs31">
<p class=Table>Specifies the format of the memory initialization file: 
 hex or binary.</td></tr>
</table>

<p>&nbsp;</p>

<p>For the revision history of the component RTL files, refer to the header 
 of each component Verilog source file. </p>

<p><span style="font-weight: bold;"><B>Note</B></span>: If the processor manual 
 fails to open, click <img src="qm_icon.jpg" x-maintain-ratio="TRUE" width="14px" height="16px" border="0" class="img_whs32"> on the Available Components toolbar, 
 and then click the note button.</p>

<script type="text/javascript" language="JavaScript">
<!--
 if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  document.write("<div id='tooltip' class='WebHelpPopupMenu'></div>");
//-->
</script><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
